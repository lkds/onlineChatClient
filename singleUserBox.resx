<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>